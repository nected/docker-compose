services:
  postgres:
    image: postgres:${POSTGRES_VERSION}
    networks:
      - nected-network
    volumes:
      - postgres:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: nected
      POSTGRES_PASSWORD: psqlPass123
      POSTGRES_DB: nected
    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-d", "nected", "-U", "nected" ]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 40s

  redis:
    image: redis:${REDIS_VERSION}
    networks:
      - nected-network
    command: redis-server --save 20 1 --loglevel warning
    volumes:
      - redis:/data
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      interval: 1s
      timeout: 3s
      retries: 5

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:${ELASTIC_VERSION}
    networks:
      - nected-network
    volumes:
      - elasticsearch:/usr/share/elasticsearch/data
    mem_limit: ${MEM_LIMIT}
    environment:
      ES_JAVA_OPTS: ${ES_JAVA_OPTS}
      CLI_JAVA_OPTS: ${ES_CLI_JAVA_OPTS}
      bootstrap.memory_lock: true
      ELASTIC_PASSWORD: esPass123
      discovery.type: single-node
      xpack.security.enabled: false
      xpack.security.enrollment.enabled: false
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl http://localhost:9200 | grep -q 'You Know, for Search'",
        ]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 40s
  temporal:
    depends_on:
      elasticsearch:
        condition: service_healthy
      postgres:
         condition: service_healthy
    image: temporalio/auto-setup:${TEMPORAL_VERSION}
    networks:
      - nected-network
    ports:
      - 7233:7233
    volumes:
      - ./dynamicconfig:/etc/temporal/config/dynamicconfig
    environment:
      - DB=postgres12
      - DB_PORT=5432
      - POSTGRES_USER=nected
      - POSTGRES_PWD=psqlPass123
      - POSTGRES_SEEDS=postgres
      - DYNAMIC_CONFIG_FILE_PATH=config/dynamicconfig/development-sql.yaml
      - ENABLE_ES=true
      - ES_SCHEME=http
      - ES_SEEDS=elasticsearch
      - ES_USER=elastic
      - ES_PWD=esPass123
      - ES_VERSION=v7
      - ES_PORT=9200
    labels:
      kompose.volume.type: configMap
  nalanda:
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy
    image: public.ecr.aws/f6k1n6r3/nalanda:${NALANDA_TAG}
    networks:
      - nected-network
    ports:
      - 8001:8001
    volumes:
      - ./nectedconfig/nalanda.env:/mnt/temp/envFile
    entrypoint: /bin/sh
    command:
    - -c
    - |
      cp /mnt/temp/envFile .env
      /app/nalanda init -e
      /app/nalanda nalanda
  vidhaan:
    depends_on:
      - temporal
      - redis
      - postgres
    image: public.ecr.aws/f6k1n6r3/vidhaan:${VIDHAAN_TAG}
    networks:
      - nected-network
    ports:
      - 8002:8002
    volumes:
      - ./nectedconfig/vidhaan.env:/mnt/temp/envFile
  sql-linter:
    image: public.ecr.aws/f6k1n6r3/sql-linter:${LINTER_TAG}
    networks:
      - nected-network
    ports:
      - 8000:8000
  konark:
    image: public.ecr.aws/f6k1n6r3/konark:${KONARK_TAG}
    networks:
      - nected-network
    ports:
      - 3000:80
    volumes:
      - ./nectedconfig/konark.env:/mnt/temp/envFile
  editor:
    image: public.ecr.aws/f6k1n6r3/nected-editor:${EDITOR_TAG}
    networks:
      - nected-network
    ports:
      - 3001:80
    volumes:
      - ./nectedconfig/editor.env:/mnt/temp/envFile

networks:
  nected-network:
    driver: bridge
    name: nected-network
    ipam:
      driver: default
      config:
        - subnet: "10.10.0.0/24"
          gateway: "10.10.0.1"

volumes:
  elasticsearch:
    driver: local
  postgres:
    driver: local
  redis:
    driver: local